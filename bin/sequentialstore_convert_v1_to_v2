#!/usr/bin/env python
## begin license ##
#
# "Meresco SequentialStore" contains components facilitating efficient sequentially ordered storing and retrieval.
#
# Copyright (C) 2015 Netherlands Institute for Sound and Vision http://instituut.beeldengeluid.nl/
# Copyright (C) 2015 Seecr (Seek You Too B.V.) http://seecr.nl
# Copyright (C) 2015 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
#
# This file is part of "Meresco SequentialStore"
#
# "Meresco SequentialStore" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# "Meresco SequentialStore" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with "Meresco SequentialStore"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
## end license ##

from seecrdeps import includeParentAndDeps       #DO_NOT_DISTRIBUTE
includeParentAndDeps(__file__)                   #DO_NOT_DISTRIBUTE

from sys import argv
from os import rename, remove
from os.path import join, isfile

from meresco.sequentialstore._sequentialstoragebynum import _SequentialStorageByNum
from meresco.sequentialstore.sequentialstorage import _Index, INDEX_DIR, SEQSTOREBYNUM_NAME


def convert(directory):
    versionFile = join(directory, "sequentialstorage.version")
    assert '1' == open(versionFile).read()

    index = _Index(join(directory, INDEX_DIR))
    oldSeqStoreByNumFileName = join(directory, SEQSTOREBYNUM_NAME)
    oldSeqStoreByNum = _SequentialStorageByNum(oldSeqStoreByNumFileName)
    newSeqStoreByNumFileName = join(directory, SEQSTOREBYNUM_NAME + '.tmp')
    if isfile(newSeqStoreByNumFileName):
        remove(newSeqStoreByNumFileName)
    newSeqStoreByNum = _SequentialStorageByNum(newSeqStoreByNumFileName)

    for identifier in index.iterkeys():
        if '\n' in identifier:
            raise ValueError("'\\n' not allowed in identifier " + repr(identifier))
        key = index[identifier]
        data = oldSeqStoreByNum[key]
        newData = "+%s\n%s" % (identifier, data)
        newSeqStoreByNum.add(key, newData)

    rename(newSeqStoreByNumFileName, oldSeqStoreByNumFileName)

    with open(versionFile, 'w') as f:
        f.write('2')


def main():
    if len(argv) != 2:
        print 'Usage: %s <directory>' % argv[0]
        exit(1)
    convert(directory=argv[1])


if __name__ == '__main__':
    main()
