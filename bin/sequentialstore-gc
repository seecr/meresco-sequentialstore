#!/usr/bin/env python
## begin license ##
#
# "Meresco SequentialStore" contains components facilitating efficient sequentially ordered storing and retrieval.
#
# Copyright (C) 2014-2016 Seecr (Seek You Too B.V.) http://seecr.nl
# Copyright (C) 2014 Stichting Bibliotheek.nl (BNL) http://www.bibliotheek.nl
#
# This file is part of "Meresco SequentialStore"
#
# "Meresco SequentialStore" is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# "Meresco SequentialStore" is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with "Meresco SequentialStore"; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
#
## end license ##

from seecrdeps import includeParentAndDeps       #DO_NOT_DISTRIBUTE
includeParentAndDeps(__file__)                   #DO_NOT_DISTRIBUTE


from meresco.sequentialstore.garbagecollect import garbageCollect
from optparse import OptionParser


if __name__ == '__main__':
    parser = OptionParser(usage="usage: %prog [options] storage_directory")
    parser.add_option('-q', '--quiet', dest='verbose', action='store_false', default=True, help='Do not print progress')
    parser.add_option('', '--skip-data-check', dest='skipDataCheck', default=False, action='store_true', help='Faster, but does not deal with all potential corruption.')
    parser.add_option('', '--targetDir', dest='targetDir', help='Should not be necessary, but serves as a last resort when the current disk lacks space (requires manual step to finish).')

    options, args = parser.parse_args()

    if len(args) != 1:
        parser.print_help()
        exit(0)

    directory = args[0]
    garbageCollect(directory, targetDir=options.targetDir, skipDataCheck=options.skipDataCheck, verbose=options.verbose)
